AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'ACS Front-end

  '
Resources:
  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: LogDeliveryWrite
    Metadata:
      SamResourceId: LogsBucket
  LogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: LogsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: AllowSSLRequestsOnly
          Action: s3:*
          Effect: Deny
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:s3:::${LogsBucket}
          - Fn::Sub: arn:${AWS::Partition}:s3:::${LogsBucket}/*
          Condition:
            Bool:
              aws:SecureTransport: 'false'
          Principal: '*'
    Metadata:
      SamResourceId: LogsBucketPolicy
  WebAppBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-acs-webapp.es
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: index.html
    Metadata:
      SamResourceId: WebAppBucket
  WebAppBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WebAppBucket
      PolicyDocument:
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::${WebAppBucket}/*
          Principal:
            CanonicalUser:
              Fn::GetAtt:
              - OriginAccessIdentity
              - S3CanonicalUserId
        - Sid: AllowSSLRequestsOnly
          Action: s3:*
          Effect: Deny
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:s3:::${WebAppBucket}
          - Fn::Sub: arn:${AWS::Partition}:s3:::${WebAppBucket}/*
          Condition:
            Bool:
              aws:SecureTransport: 'false'
          Principal: '*'
    Metadata:
      SamResourceId: WebAppBucketBucketPolicy
  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Origin Access Identity Config
    Metadata:
      SamResourceId: OriginAccessIdentity
  ContentDelivery:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        HttpVersion: http2
        CustomErrorResponses:
        - ErrorCode: 403
          ResponsePagePath: /index.html
          ResponseCode: 200
          ErrorCachingMinTTL: 300
        - ErrorCode: 404
          ResponsePagePath: /index.html
          ResponseCode: 200
          ErrorCachingMinTTL: 300
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          CachedMethods:
          - GET
          - HEAD
          - OPTIONS
          Compress: true
          ForwardedValues:
            QueryString: true
          TargetOriginId: S3
          SmoothStreaming: false
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        Logging:
          IncludeCookies: false
          Bucket:
            Fn::Sub: ${LogsBucket}.s3.amazonaws.com
          Prefix: delivery-logs
        Origins:
        - Id: S3
          DomainName:
            Fn::GetAtt:
            - WebAppBucket
            - RegionalDomainName
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Sub: origin-access-identity/cloudfront/${OriginAccessIdentity}
        PriceClass: PriceClass_100
    Metadata:
      SamResourceId: ContentDelivery
Outputs:
  WebAppBucket:
    Description: Front Bucket
    Value:
      Ref: WebAppBucket
  CdnId:
    Value:
      Ref: ContentDelivery
